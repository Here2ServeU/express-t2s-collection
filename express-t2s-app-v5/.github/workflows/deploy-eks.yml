name: CI/CD Pipeline — Build Image & Deploy to EKS via Terraform

# Trigger on push to main
#on:
#  push:
#    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPO_NAME: express-t2s-app
  ECR_IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPO_NAME:$ECR_IMAGE_TAG ./app
          docker tag $ECR_REPO_NAME:$ECR_IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO_NAME:$ECR_IMAGE_TAG

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO_NAME:$ECR_IMAGE_TAG

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (EKS)
        working-directory: terraform/eks
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform/eks
        run: terraform plan -var="image_url=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.ECR_IMAGE_TAG }}"

      - name: Terraform Apply (Deploy EKS Infra)
        working-directory: terraform/eks
        run: terraform apply -auto-approve -var="image_url=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.ECR_IMAGE_TAG }}"

      - name: Configure kubectl for EKS access
        run: |
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name t2s-eks-cluster

      - name: Set image URI env variable
        run: echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPO_NAME:$ECR_IMAGE_TAG" >> $GITHUB_ENV

      - name: Replace image in deployment.yaml
        run: |
          sed -i "s|REPLACE_IMAGE|${IMAGE_URI}|g" k8s/deployment.yaml

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify Deployment Status
        run: |
          kubectl rollout status deployment/t2s-express-deployment
          kubectl get svc t2s-express-service
